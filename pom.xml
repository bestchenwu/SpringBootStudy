<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion> 
	<!--
	<parent>
		<groupId>com.meitun</groupId>
		<artifactId>parent</artifactId>
		<version>1.2.0.RELEASE</version>
	</parent>
	-->
	
	<groupId>com.sweet</groupId>
	<artifactId>SpringBootStudy</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>sweet-spring-boot-study</name>
	<url>http://maven.apache.org</url>
	
	<!--
	<modules>		
		<module>youwei-store-client</module>
		<module>youwei-store-common</module>
		<module>youwei-store-core</module>
		<module>youwei-store-web</module>
  </modules>
  -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<fastjson.version>1.2.12</fastjson.version>
		<commons-lang.version>2.6</commons-lang.version>
		<commons-collections.version>3.2.1</commons-collections.version>
		<slf4j.version>1.7.21</slf4j.version>
		<log4j.version>1.2.17</log4j.version>
		<build.plugins.plugin.version>3.0.1</build.plugins.plugin.version>
		<spark.version>2.4.0</spark.version>
		<postgresql.version>42.2.5</postgresql.version>
		<scala.version>2.12.12</scala.version>
		<scala-lib.version>2.12</scala-lib.version>
		<mysql.version>8.0.13</mysql.version>
		<junit.version>4.12</junit.version>
		<flink.version>1.8.1</flink.version>
		<hadoop.version>2.7.4</hadoop.version>
		<zookeeper.version>3.4.13</zookeeper.version>
		<hbase.version>2.0.2</hbase.version>
		<kafka.version>2.0.1</kafka.version>
		<curator-recipes.version>4.1.0</curator-recipes.version>
		<!-- 引入redission -->
		<redission.version>3.12.3</redission.version>
		<jedis.version>3.2.0</jedis.version>
	</properties>

		<dependencies>
			
			<!-- Logging API end-->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${fastjson.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${commons-lang.version}</version>
			</dependency>		
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>${commons-collections.version}</version>
			</dependency>
			<!-- 引入mysql -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.version}</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- 引入spring boot -->
			 <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
             <version>2.5.1</version>
        </dependency>
		</dependencies>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.6.0</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${build.plugins.plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${build.plugins.plugin.version}</version>
				<configuration>  
					<attach>true</attach>  
				</configuration>  
				<executions>  
					<execution>  
						<phase>compile</phase>  
						<goals>  
							<goal>jar</goal>  
						</goals>  
					</execution>  
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
				  <archive>
					<manifest>
					  <!-- 指定Main方法入口的class -->
					  <!--
					  <mainClass>com.birdben.App</mainClass>
					  --> 
					  <!-- 在jar包的MANIFEST.MF文件中生成Class-Path属性 -->
					  <!--
					  <addClasspath>true</addClasspath>
					  -->
					  <!-- Class-Path 前缀 -->
					  <!--
					  <classpathPrefix>lib/</classpathPrefix>
					  -->
					</manifest>
					<!-- 把本地的第三方jar包添加到MANIFEST.MF文件中,可以解压打包后的jar包查看MANIFEST.MF文件 -->
					<!--
					Class-Path: 指定当前jar包执行所依赖的classpath,包括本地的第三方jar包和maven引入的jar包
					Class-Path: lib/slf4j-api-1.7.13.jar lib/junit-3.8.1.jar
					Main-Class: 指定当前jar包的入口class
					Main-Class: com.birdben.App
					-->
					<!--
					<manifestEntries>
					  <Class-Path>lib/slf4j-api-1.7.13.jar</Class-Path>
					</manifestEntries>
					-->
				  </archive>
				</configuration>
			 </plugin>
			 <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
				  <execution>
					<id>copy</id>
					<phase>package</phase>
					<goals>
					  <goal>copy-dependencies</goal>
					</goals>
					<configuration>
					  <!-- ${project.build.directory} 构建目录，缺省为target -->
					  <outputDirectory>
						${project.build.directory}/lib
					  </outputDirectory>
					</configuration>
				  </execution>
				</executions>
			 </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<!-- put your configurations here -->
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<!--添加aliyun maven地址 -->
		<repository>
			<id>maven-ali</id>
			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</repository>
	</repositories>
</project>
